_import:"utilities_lib_2"


Board~{
        data~bytes.9
        Cell~{
                R~int
                C~int
                Symbol~{
                        g~int
                        Is~{
                                ;~{
                                        p~@c_iter:@data
                                        p:{p+C+{R*3}}
                                        t~int:0
                                        t
                                        p.el = g
                                }
                        }
                        Set~{
                                ;~{
                                        p~@c_iter:@data
                                        p:{p+C+{R*3}}
                                        p.el:g
                                }
                        }
                }
                X~{
                        ~Symbol
                        g:88
                }
                O~{
                        ~Symbol
                        g:79
                }
                EMPTY~{
                        ~Symbol
                        g:46
                }
        }
        Start~{
                ;~{
                        p~@c_iter:@data
                        n~int:0
                        c~int:46
                        {n < 9}?*{
                                p.el:c
                                n:{n+1}
                                p:{p+1}
                        }
                }
        }
        Print~{
                ;~{
                        p~@c_iter:@data
                        n~int:0
                        {n < 9}?*{
                                print.c:p.el
                                {{n % 3} = 2}?{
                                        print.endl
                                }
                                n:{n+1}
                                p:{p+1}
                        }
                }
        }
}

GameState~{
        ~enum
        DEFAULT~{~op op_val:0}
        TIE~{~op op_val:1}
        WON~{~op op_val:2}
}

Game~{
        board~Board
        state~GameState
        r~int
        c~int
        stateFn~;
        start~;
        center~;
        top_or_bottom~;
        side~;
        opposite~;
        lower_left~;
        upper_right~;
        side_2~;
        top_or_bottom_2~;
        lower_left_2~;
        upper_right_2~;
        opposite_2~;
        center_2~;
        center_3~;
        start:@{
                {{r = 1} & {c = 1}}  ? { r:0 c:1 stateFn:center }
                ^{r = 1}             ? { r:1 c:1 stateFn:side }
                ^{c = 1}             ? { r:1 c:1 stateFn:top_or_bottom }
                ^{{r = 0} & {c = 2}} ? { r:2 c:2 stateFn:upper_right }
                ^{{r = 2} & {c = 0}} ? { r:2 c:2 stateFn:lower_left }
                ^                      { r:2 c:0 stateFn:opposite }
        }
        top_or_bottom:@{
                {{r = 2} & {c = 2}} ? { r:2 c:0 stateFn:top_or_bottom_2 }
                                    ^ { r:2 c:2 state.WON.set }
        }
        top_or_bottom_2:@{
                {c = 0} ? { r:0 c:2 state.WON.set}
                        ^ { r:1 c:0 state.WON.set}
        }
        upper_right:@{
                {{r = 1} & {c = 1}} ? { r:2 c:0 stateFn:upper_right_2 }
                                    ^ { r:1 c:1 state.WON.set }
        }
        upper_right_2:@{
                {c = 0} ? { r:2 c:1 state.WON.set }
                        ^ { r:1 c:0 state.WON.set }
        }
        side:@{
                {{r = 2} & {c = 2}} ? { r:0 c:2 stateFn:side_2 }
                                    ^ { r:2 c:2 state.WON.set }
        }
        side_2:@{
                {r = 0} ? {r:2 c:0 state.WON.set}
                        ^ {r:0 c:1 state.WON.set}
        }
        lower_left:@{
                {{r = 1} & {c = 1}} ? { r:0 c:2 stateFn:lower_left_2 }
                                    ^ { r:1 c:1 state.WON.set }
        }
        lower_left_2:@{
                {r = 0} ? { r:1 c:2 state.WON.set }
                        ^ { r:0 c:1 state.WON.set }
        }
        opposite:@{
                {c = 0} ? { r:0 c:2 stateFn:opposite_2 }
                        ^ { r:1 c:0 state.WON.set }
        }
        opposite_2:@{
                {r = 0} ? { r:1 c:1 state.WON.set }
                        ^ { r:0 c:1 state.WON.set }
        }
        center:@{
                {{r = 0} & {c = 2}} ? { r:2 c:0 stateFn:center_2 }
                                    ^ { r:0 c:2 state.WON.set }
        }
        center_2:@{
                {c = 0} ? { r:1 c:2 stateFn:center_3 }
                        ^ { r:1 c:0 state.WON.set }
        }
        center_3:@{
                {c = 1} ? { r:2 c:2 state.TIE.set }
                        ^ { r:2 c:1 state.TIE.set }
        }
}

;~{
        Game.{
                board.{Start Cell.{R:0 C:0 X.Set}}
                state.DEFAULT.set
                stateFn:start
                {state.DEFAULT.is}?*{
                        board.Print
                        print:"Enter move (Row,Column):"
                        RInput~int:GetChar
                        newChar~int:GetChar
                        {newChar = 44}?{
                                newChar:GetChar
                        }
                        CInput~int:newChar
                        {newChar != 10}?*{
                                newChar:GetChar
                        }
                        {{RInput < 49} | {RInput > 51} | {CInput < 49} | {CInput > 51}} ? {
                                print.line:"Illegal move."
                        }^{
                                r:{RInput-49}
                                c:{CInput-49}
                                {board.Cell.{R:r C:c EMPTY.Is}}?{
                                        board.Cell.{R:r C:c O.Set}
                                        stateFn
                                        board.Cell.{R:r C:c X.Set}
                                }^{
                                        print.line:"Illegal move."
                                }
                        }
                }
                board.Print
                {state.WON.is}?{
                        print.line:"Game over"
                }^{
                        print.line:"Cats game"
                }
        }
}

