bytes~{
	c0~int:0 c1~int c2~int c3~int c4~int c5~int
	
}

system~{
	~sysrun
	
	rax~int
	rdx~int
	
	rdi~int
	rsi~int
}

interface~{
	ignore~int
	
	
	fn~;
	;~{fn}
}

writenf~{
	~interface
	bn~@bytes
	s~{
		b~@bytes
		;~{
			bn:b
			;
		}
	}
	c~{
		in~int
		;~{
			b~bytes.{c0:1 c1:in}
			
			bn:@b
			;
		}
	}
	
	endl~{
		;~{
			c:10
		}
	}
	d~{
		in~int
		;~{
			intb~bytes
			p~@bytes:@intb
			p:{p+40}
			p.c0:{in%10+48}
			in:{in/10}
			p:{p-8}
			
			size~int:1
			
			{in}#{
				p.c0:{in%10+48}
				in:{in/10}
				p:{p-8}
				size:{size+1}
			}
			p.c0:size
			
			bn:p
			;
		}
	}
}

print~{
	~writenf
	fn:@{
		wr~@writenf:$
		b~@bytes:wr.bn
		system.{
			rax:0x2000004
			rsi:{b+8}
			rdi:1
			rdx:{b.c0*8}
			;
		}
	}
}
list~{
	b~@bytes
	set~{
		at~int
		char~int
		;~{
			p~@bytes:{b+{at*8}}
			p.c1:char
		}
	}
	each~{
		
		f~;
		;~{
			p~@bytes:b
			remaining~int
			remaining:p.c0
			p:{p+8}
			{remaining}#{
				mbr~@bytes:p.c0
				mbr.{f}
				
				
				p:{p+8}
				remaining:{remaining-1}
			}
		}
	}
}









str~{
	
	~list
	write~{
		~writenf
		fn:@{
			wr~@writenf
			wr:$
			base~@str:wr.ignore
			in~@bytes:wr.bn
			self~@bytes:base.b
			
			countin~int:in.c0
			countself~int:self.c0
			self.c0:{countself+countin}
			self:{self+8+{countself*8}}
			in:{in+8}
			{countin}#{
				self.c0:in.c0
				self:{self+8}
				in:{in+8}
				
				countin:{countin-1}
			}
		}
	}
}
npair~{a~int b~int}
b1~npair.{a:0 b:1}
b2~npair.{a:2 b:5}
b3~npair.{a:0 b:5}
b4~npair.{a:2 b:7}
b5~npair.{a:4 b:1}
b0~bytes.{c0:5 c1:@b1 c2:@b2 c3:@b3 c4:@b4 c5:@b5}

l~list:@b0

l.each:@{
	np~@npair:$
	np.{
		print.d:{a+b}
	}
}
getmsg~{
	write~@writenf
	;~{
		write.{c:72 c:69 c:76 c:76 c:79}
	}
	
}


print.{
	hello~bytes
	msg~str:@hello
	msg.write.{getmsg:@$}
	getmsg:@$
	msg.set.{char:70 at:1 ; at:2 ; at:3 ; at:4 ;}
	s:msg
	
	d:1749 c:102 d:0 c:90 endl
}

factorial~{
	in~int
	;~{
		out~int:1
		{in}?{
			{in-1}?{
				out:{in * factorial:{in-1}}
			}
		}
		out
	}
}

print.{d:factorial:7 endl}
